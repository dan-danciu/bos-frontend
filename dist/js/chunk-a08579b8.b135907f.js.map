{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/es/utils/dom.js","webpack:///./node_modules/bootstrap-vue/es/utils/object.js","webpack:///./node_modules/bootstrap-vue/es/mixins/id.js","webpack:///./node_modules/bootstrap-vue/es/mixins/clickout.js","webpack:///./node_modules/bootstrap-vue/es/utils/key-codes.js","webpack:///./node_modules/bootstrap-vue/es/utils/bv-event.class.js","webpack:///./node_modules/bootstrap-vue/es/utils/warn.js","webpack:///./node_modules/bootstrap-vue/es/mixins/dropdown.js","webpack:///./node_modules/bootstrap-vue/es/components/nav/nav-item-dropdown.js","webpack:///./node_modules/bootstrap-vue/es/utils/array.js","webpack:///./node_modules/bootstrap-vue/es/mixins/listen-on-root.js","webpack:///./node_modules/popper.js/dist/esm/popper.js"],"names":["__webpack_require__","d","__webpack_exports__","isVisible","reflow","selectAll","closest","hasClass","getAttr","eventOn","eventOff","_array__WEBPACK_IMPORTED_MODULE_0__","isElement","el","nodeType","Node","ELEMENT_NODE","document","body","contains","getBoundingClientRect","height","width","offsetHeight","selector","root","Object","querySelectorAll","matches","proto","Element","prototype","Matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","sel","element","this","m","ownerDocument","i","length","item","call","Closest","documentElement","parentElement","className","classList","attr","getAttribute","evtName","handler","addEventListener","removeEventListener","assign","keys","defineProperties","defineProperty","readonlyDescriptor","target","varArgs","TypeError","to","index","arguments","nextSource","nextKey","hasOwnProperty","is","x","y","getOwnPropertyNames","freeze","getOwnPropertyDescriptor","getOwnPropertySymbols","getPrototypeOf","create","isFrozen","enumerable","configurable","writable","id","props","type","String","default","methods","safeId","suffix","undefined","localId_","replace","computed","$isServer","_uid","clickout","mounted","_clickOutListener","beforeDestroy","e","$el","clickOutListener","key_codes","SPACE","ENTER","ESC","LEFT","UP","RIGHT","DOWN","PAGEUP","PAGEDOWN","HOME","END","_createClass","descriptor","key","Constructor","protoProps","staticProps","_classCallCheck","instance","bv_event_class_BvEvent","BvEvent","eventInit","constructor","name","object","defaults","cancelable","nativeEvent","relatedTarget","vueTarget","defaultPrevented","preventDefault","get","value","bv_event_class","warn","message","console","utils_warn","filterVisible","els","filter","dom","ITEM_SELECTOR","AttachmentMap","TOP","TOPEND","BOTTOM","BOTTOMEND","dropdown","mixins","listen_on_root","disabled","Boolean","text","dropup","right","offset","Number","noFlip","popperOpts","data","visible","inNavbar","visibleChangePrevented","created","_popper","listenOnRoot","rootCloseListener","deactivated","setTouchStart","removePopper","watch","newValue","oldValue","bvEvt","$refs","menu","emitEvent","showMenu","hideMenu","toggler","toggle","$emit","emitOnRoot","isNav","popper","split","createPopper","$nextTick","focusFirstItem","getPopperConfig","destroy","placement","popperConfig","modifiers","flip","enabled","boundary","preventOverflow","boundariesElement","on","_this","children","array","forEach","_noop","vm","show","hide","evt","keyCode","stopPropagation","click","onKeydown","onEsc","TAB","onTab","focusNext","focusToggler","onFocusOut","onMouseOver","focus","up","_this2","items","getItems","indexOf","focusItem","idx","find","getFirstItem","render","h","button","class","toggleClasses","ref","attrs","href","aria-haspopup","aria-expanded","keydown","$slots","domProps","innerHTML","menuClasses","aria-labelledby","mouseover","dropdownClasses","noCaret","extraToggleClasses","extraMenuClasses","role","from","isArray","arrayIncludes","concat","Array","toStr","toString","isCallable","fn","toInteger","number","isNaN","isFinite","Math","floor","abs","maxSafeInteger","pow","toLength","min","max","arrayLike","C","mapFn","T","len","A","k","kValue","predicate","o","thisArg","arg","apply","_utils_array__WEBPACK_IMPORTED_MODULE_0__","_toConsumableArray","arr","arr2","BVRL","event","callback","push","$root","$on","_$root","_len","args","_key","_BVRL$shift","shift","$off","global","isBrowser","window","longerTimeoutBrowsers","timeoutDuration","navigator","userAgent","microtaskDebounce","called","Promise","resolve","then","taskDebounce","scheduled","setTimeout","supportsMicroTasks","debounce","isFunction","functionToCheck","getType","getStyleComputedProperty","property","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","_getStyleComputedProp","overflow","overflowX","overflowY","test","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","noOffsetParent","offsetParent","nextElementSibling","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","parseInt","getWindowSizes","classCallCheck","createClass","obj","_extends","source","getClientRect","offsets","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","getOffsetRectRelativeToArbitraryNode","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","isFixed","getFixedPositionOffsetParent","getBoundaries","reference","padding","boundaries","boundariesNode","_getWindowSizes","isPaddingNumber","getArea","_ref","computeAutoPlacement","refRect","rects","sortedAreas","map","area","sort","a","b","filteredAreas","_ref2","computedPlacement","variation","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","marginBottom","marginRight","getOppositePlacement","hash","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","check","findIndex","prop","cur","match","runModifiers","ends","modifiersToRun","slice","update","isDestroyed","arrowStyles","attributes","flipped","options","positionFixed","originalPlacement","position","isCreated","onUpdate","onCreate","isModifierEnabled","modifierName","some","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","removeAttribute","willChange","disableEventListeners","removeOnDestroy","removeChild","getWindow","defaultView","attachToScrollParents","scrollParents","isBody","passive","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","cancelAnimationFrame","isNumeric","n","setStyles","unit","setAttributes","setAttribute","applyStyle","arrowElement","applyStyleOnLoad","modifierOptions","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","round","prefixedProperty","invertTop","invertLeft","x-placement","arrow","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","_data$offsets$arrow","querySelector","_data$offsets","isVertical","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","getOppositeVariation","placements","validPlacements","clockwise","counter","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","keepTogether","toValue","str","size","parseOffset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","shiftvariation","shiftOffsets","bound","inner","subtractLength","onLoad","Defaults","Popper","requestAnimationFrame","bind","jquery","Utils","PopperUtils"],"mappings":"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","file":"js/chunk-a08579b8.b135907f.js","sourcesContent":["import { from as arrayFrom } from './array';\n\n// Determine if an element is an HTML Element\nexport var isElement = function isElement(el) {\n  return el && el.nodeType === Node.ELEMENT_NODE;\n};\n\n// Determine if an HTML element is visible - Faster than CSS check\nexport var isVisible = function isVisible(el) {\n  return isElement(el) && document.body.contains(el) && el.getBoundingClientRect().height > 0 && el.getBoundingClientRect().width > 0;\n};\n\n// Determine if an element is disabled\nexport var isDisabled = function isDisabled(el) {\n  return !isElement(el) || el.disabled || el.classList.contains('disabled') || Boolean(el.getAttribute('disabled'));\n};\n\n// Cause/wait-for an element to reflow it's content (adjusting it's height/width)\nexport var reflow = function reflow(el) {\n  // requsting an elements offsetHight will trigger a reflow of the element content\n  return isElement(el) && el.offsetHeight;\n};\n\n// Select all elements matching selector. Returns [] if none found\nexport var selectAll = function selectAll(selector, root) {\n  if (!isElement(root)) {\n    root = document;\n  }\n  return arrayFrom(root.querySelectorAll(selector));\n};\n\n// Select a single element, returns null if not found\nexport var select = function select(selector, root) {\n  if (!isElement(root)) {\n    root = document;\n  }\n  return root.querySelector(selector) || null;\n};\n\n// Determine if an element matches a selector\nexport var matches = function matches(el, selector) {\n  if (!isElement(el)) {\n    return false;\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n  // Prefer native implementations over polyfill function\n  var proto = Element.prototype;\n  var Matches = proto.matches || proto.matchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector || proto.webkitMatchesSelector ||\n  /* istanbul ignore next */\n  function (sel) {\n    var element = this;\n    var m = selectAll(sel, element.document || element.ownerDocument);\n    var i = m.length;\n    // eslint-disable-next-line no-empty\n    while (--i >= 0 && m.item(i) !== element) {}\n    return i > -1;\n  };\n\n  return Matches.call(el, selector);\n};\n\n// Finds closest element matching selector. Returns null if not found\nexport var closest = function closest(selector, root) {\n  if (!isElement(root)) {\n    return null;\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n  // Since we dont support IE < 10, we can use the \"Matches\" version of the polyfill for speed\n  // Prefer native implementation over polyfill function\n  var Closest = Element.prototype.closest ||\n  /* istanbul ignore next */\n  function (sel) {\n    var element = this;\n    if (!document.documentElement.contains(element)) {\n      return null;\n    }\n    do {\n      // Use our \"patched\" matches function\n      if (matches(element, sel)) {\n        return element;\n      }\n      element = element.parentElement;\n    } while (element !== null);\n    return null;\n  };\n\n  var el = Closest.call(root, selector);\n  // Emulate jQuery closest and return null if match is the passed in element (root)\n  return el === root ? null : el;\n};\n\n// Get an element given an ID\nexport var getById = function getById(id) {\n  return document.getElementById(/^#/.test(id) ? id.slice(1) : id) || null;\n};\n\n// Add a class to an element\nexport var addClass = function addClass(el, className) {\n  if (className && isElement(el)) {\n    el.classList.add(className);\n  }\n};\n\n// Remove a class from an element\nexport var removeClass = function removeClass(el, className) {\n  if (className && isElement(el)) {\n    el.classList.remove(className);\n  }\n};\n\n// Test if an element has a class\nexport var hasClass = function hasClass(el, className) {\n  if (className && isElement(el)) {\n    return el.classList.contains(className);\n  }\n  return false;\n};\n\n// Set an attribute on an element\nexport var setAttr = function setAttr(el, attr, value) {\n  if (attr && isElement(el)) {\n    el.setAttribute(attr, value);\n  }\n};\n\n// Remove an attribute from an element\nexport var removeAttr = function removeAttr(el, attr) {\n  if (attr && isElement(el)) {\n    el.removeAttribute(attr);\n  }\n};\n\n// Get an attribute value from an element (returns null if not found)\nexport var getAttr = function getAttr(el, attr) {\n  if (attr && isElement(el)) {\n    return el.getAttribute(attr);\n  }\n  return null;\n};\n\n// Determine if an attribute exists on an element (returns true or false, or null if element not found)\nexport var hasAttr = function hasAttr(el, attr) {\n  if (attr && isElement(el)) {\n    return el.hasAttribute(attr);\n  }\n  return null;\n};\n\n// Return the Bounding Client Rec of an element. Retruns null if not an element\nexport var getBCR = function getBCR(el) {\n  return isElement(el) ? el.getBoundingClientRect() : null;\n};\n\n// Get computed style object for an element\nexport var getCS = function getCS(el) {\n  return isElement(el) ? window.getComputedStyle(el) : {};\n};\n\n// Return an element's offset wrt document element\n// https://j11y.io/jquery/#v=git&fn=jQuery.fn.offset\nexport var offset = function offset(el) {\n  if (isElement(el)) {\n    if (!el.getClientRects().length) {\n      return { top: 0, left: 0 };\n    }\n    var bcr = getBCR(el);\n    var win = el.ownerDocument.defaultView;\n    return {\n      top: bcr.top + win.pageYOffset,\n      left: bcr.left + win.pageXOffset\n    };\n  }\n};\n\n// Return an element's offset wrt to it's offsetParent\n// https://j11y.io/jquery/#v=git&fn=jQuery.fn.position\nexport var position = function position(el) {\n  if (!isElement(el)) {\n    return;\n  }\n  var parentOffset = { top: 0, left: 0 };\n  var offsetSelf = void 0;\n  var offsetParent = void 0;\n  if (getCS(el).position === 'fixed') {\n    offsetSelf = getBCR(el);\n  } else {\n    offsetSelf = offset(el);\n    var doc = el.ownerDocument;\n    offsetParent = el.offsetParent || doc.documentElement;\n    while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && getCS(offsetParent).position === 'static') {\n      offsetParent = offsetParent.parentNode;\n    }\n    if (offsetParent && offsetParent !== el && offsetParent.nodeType === Node.ELEMENT_NODE) {\n      parentOffset = offset(offsetParent);\n      parentOffset.top += parseFloat(getCS(offsetParent).borderTopWidth);\n      parentOffset.left += parseFloat(getCS(offsetParent).borderLeftWidth);\n    }\n  }\n  return {\n    top: offsetSelf.top - parentOffset.top - parseFloat(getCS(el).marginTop),\n    left: offsetSelf.left - parentOffset.left - parseFloat(getCS(el).marginLeft)\n  };\n};\n\n// Attach an event listener to an element\nexport var eventOn = function eventOn(el, evtName, handler) {\n  if (el && el.addEventListener) {\n    el.addEventListener(evtName, handler);\n  }\n};\n\n// Remove an event listener from an element\nexport var eventOff = function eventOff(el, evtName, handler) {\n  if (el && el.removeEventListener) {\n    el.removeEventListener(evtName, handler);\n  }\n};","/**\n * Aliasing Object[method] allows the minifier to shorten methods to a single character variable,\n * as well as giving BV a chance to inject polyfills.\n * As long as we avoid\n * - import * as Object from \"utils/object\"\n * all unused exports should be removed by tree-shaking.\n */\n\n// @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif (typeof Object.assign !== 'function') {\n  Object.assign = function (target, varArgs) {\n    // .length of function is 2\n\n    if (target == null) {\n      // TypeError if undefined or null\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    var to = Object(target);\n\n    for (var index = 1; index < arguments.length; index++) {\n      var nextSource = arguments[index];\n\n      if (nextSource != null) {\n        // Skip over if undefined or null\n        for (var nextKey in nextSource) {\n          // Avoid bugs when hasOwnProperty is shadowed\n          if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n    return to;\n  };\n}\n\n// @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is#Polyfill\nif (!Object.is) {\n  Object.is = function (x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      // eslint-disable-next-line no-self-compare\n      return x !== x && y !== y;\n    }\n  };\n}\n\nexport var assign = Object.assign;\nexport var getOwnPropertyNames = Object.getOwnPropertyNames;\nexport var keys = Object.keys;\nexport var defineProperties = Object.defineProperties;\nexport var defineProperty = Object.defineProperty;\nexport var freeze = Object.freeze;\nexport var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nexport var getOwnPropertySymbols = Object.getOwnPropertySymbols;\nexport var getPrototypeOf = Object.getPrototypeOf;\nexport var create = Object.create;\nexport var isFrozen = Object.isFrozen;\nexport var is = Object.is;\n\nexport function readonlyDescriptor() {\n  return { enumerable: true, configurable: false, writable: false };\n}","/*\n * SSR Safe Client Side ID attribute generation\n *\n */\n\nexport default {\n  props: {\n    id: {\n      type: String,\n      default: null\n    }\n  },\n  methods: {\n    safeId: function safeId() {\n      var suffix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      var id = this.id || this.localId_ || null;\n      if (!id) {\n        return null;\n      }\n      suffix = String(suffix).replace(/\\s+/g, '_');\n      return suffix ? id + '_' + suffix : id;\n    }\n  },\n  computed: {\n    localId_: function localId_() {\n      if (!this.$isServer && !this.id && typeof this._uid !== 'undefined') {\n        return '__BVID__' + this._uid;\n      }\n    }\n  }\n};","export default {\n  mounted: function mounted() {\n    if (typeof document !== 'undefined') {\n      document.documentElement.addEventListener('click', this._clickOutListener);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (typeof document !== 'undefined') {\n      document.documentElement.removeEventListener('click', this._clickOutListener);\n    }\n  },\n\n  methods: {\n    _clickOutListener: function _clickOutListener(e) {\n      if (!this.$el.contains(e.target)) {\n        if (this.clickOutListener) {\n          this.clickOutListener();\n        }\n      }\n    }\n  }\n};","/*\n * Key Codes (events)\n */\n\nexport default {\n  SPACE: 32,\n  ENTER: 13,\n  ESC: 27,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n  PAGEUP: 33,\n  PAGEDOWN: 34,\n  HOME: 36,\n  END: 35\n};","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { assign, defineProperty, defineProperties, readonlyDescriptor } from '../utils/object';\n\nvar BvEvent = function () {\n  function BvEvent(type) {\n    var eventInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, BvEvent);\n\n    // Start by emulating native Event constructor.\n    if (!type) {\n      throw new TypeError('Failed to construct \\'' + this.constructor.name + '\\'. 1 argument required, ' + arguments.length + ' given.');\n    }\n    // Assign defaults first, the eventInit,\n    // and the type last so it can't be overwritten.\n    assign(this, BvEvent.defaults(), eventInit, { type: type });\n    // Freeze some props as readonly, but leave them enumerable.\n    defineProperties(this, {\n      type: readonlyDescriptor(),\n      cancelable: readonlyDescriptor(),\n      nativeEvent: readonlyDescriptor(),\n      target: readonlyDescriptor(),\n      relatedTarget: readonlyDescriptor(),\n      vueTarget: readonlyDescriptor()\n    });\n    // Create a private variable using closure scoping.\n    var defaultPrevented = false;\n    // Recreate preventDefault method. One way setter.\n    this.preventDefault = function preventDefault() {\n      if (this.cancelable) {\n        defaultPrevented = true;\n      }\n    };\n    // Create 'defaultPrevented' publicly accessible prop\n    // that can only be altered by the preventDefault method.\n    defineProperty(this, 'defaultPrevented', {\n      enumerable: true,\n      get: function get() {\n        return defaultPrevented;\n      }\n    });\n  }\n\n  _createClass(BvEvent, null, [{\n    key: 'defaults',\n    value: function defaults() {\n      return {\n        type: '',\n        cancelable: true,\n        nativeEvent: null,\n        target: null,\n        relatedTarget: null,\n        vueTarget: null\n      };\n    }\n  }]);\n\n  return BvEvent;\n}();\n\nexport default BvEvent;","/**\n * Log a warning message to the console with bootstrap-vue formatting sugar.\n * @param {string} message\n */\n/* istanbul ignore next */\nfunction warn(message) {\n  console.warn(\"[Bootstrap-Vue warn]: \" + message);\n}\n\nexport default warn;","import Popper from 'popper.js';\nimport clickoutMixin from './clickout';\nimport listenOnRootMixin from './listen-on-root';\nimport { from as arrayFrom } from '../utils/array';\nimport { assign } from '../utils/object';\nimport KeyCodes from '../utils/key-codes';\nimport BvEvent from '../utils/bv-event.class';\nimport warn from '../utils/warn';\nimport { isVisible, closest, selectAll, getAttr, eventOn, eventOff } from '../utils/dom';\n\n// Return an Array of visible items\nfunction filterVisible(els) {\n  return (els || []).filter(isVisible);\n}\n\n// Dropdown item CSS selectors\n// TODO: .dropdown-form handling\nvar ITEM_SELECTOR = '.dropdown-item:not(.disabled):not([disabled])';\n\n// Popper attachment positions\nvar AttachmentMap = {\n  // DropUp Left Align\n  TOP: 'top-start',\n  // DropUp Right Align\n  TOPEND: 'top-end',\n  // Dropdown left Align\n  BOTTOM: 'bottom-start',\n  // Dropdown Right Align\n  BOTTOMEND: 'bottom-end'\n};\n\nexport default {\n  mixins: [clickoutMixin, listenOnRootMixin],\n  props: {\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    text: {\n      // Button label\n      type: String,\n      default: ''\n    },\n    dropup: {\n      // place on top if possible\n      type: Boolean,\n      default: false\n    },\n    right: {\n      // Right align menu (default is left align)\n      type: Boolean,\n      default: false\n    },\n    offset: {\n      // Number of pixels to offset menu, or a CSS unit value (i.e. 1px, 1rem, etc)\n      type: [Number, String],\n      default: 0\n    },\n    noFlip: {\n      // Disable auto-flipping of menu from bottom<=>top\n      type: Boolean,\n      default: false\n    },\n    popperOpts: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      visible: false,\n      inNavbar: null,\n      visibleChangePrevented: false\n    };\n  },\n  created: function created() {\n    // Create non-reactive property\n    this._popper = null;\n  },\n  mounted: function mounted() {\n    // To keep one dropdown opened on page\n    this.listenOnRoot('bv::dropdown::shown', this.rootCloseListener);\n    // Hide when clicked on links\n    this.listenOnRoot('clicked::link', this.rootCloseListener);\n    // Use new namespaced events\n    this.listenOnRoot('bv::link::clicked', this.rootCloseListener);\n  },\n\n  /* istanbul ignore next: not easy to test */\n  deactivated: function deactivated() {\n    // In case we are inside a `<keep-alive>`\n    this.visible = false;\n    this.setTouchStart(false);\n    this.removePopper();\n  },\n\n  /* istanbul ignore next: not easy to test */\n  beforeDestroy: function beforeDestroy() {\n    this.visible = false;\n    this.setTouchStart(false);\n    this.removePopper();\n  },\n\n  watch: {\n    visible: function visible(newValue, oldValue) {\n      if (this.visibleChangePrevented) {\n        this.visibleChangePrevented = false;\n        return;\n      }\n\n      if (newValue !== oldValue) {\n        var evtName = newValue ? 'show' : 'hide';\n        var bvEvt = new BvEvent(evtName, {\n          cancelable: true,\n          vueTarget: this,\n          target: this.$refs.menu,\n          relatedTarget: null\n        });\n        this.emitEvent(bvEvt);\n        if (bvEvt.defaultPrevented) {\n          // Reset value and exit if canceled\n          this.visibleChangePrevented = true;\n          this.visible = oldValue;\n          return;\n        }\n        if (evtName === 'show') {\n          this.showMenu();\n        } else {\n          this.hideMenu();\n        }\n      }\n    },\n    disabled: function disabled(newValue, oldValue) {\n      if (newValue !== oldValue && newValue && this.visible) {\n        // Hide dropdown if disabled changes to true\n        this.visible = false;\n      }\n    }\n  },\n  computed: {\n    toggler: function toggler() {\n      return this.$refs.toggle.$el || this.$refs.toggle;\n    }\n  },\n  methods: {\n    // Event emitter\n    emitEvent: function emitEvent(bvEvt) {\n      var type = bvEvt.type;\n      this.$emit(type, bvEvt);\n      this.emitOnRoot('bv::dropdown::' + type, bvEvt);\n    },\n    showMenu: function showMenu() {\n      if (this.disabled) {\n        return;\n      }\n      // Ensure other menus are closed\n      this.emitOnRoot('bv::dropdown::shown', this);\n\n      // Are we in a navbar ?\n      if (this.inNavbar === null && this.isNav) {\n        this.inNavbar = Boolean(closest('.navbar', this.$el));\n      }\n\n      // Disable totally Popper.js for Dropdown in Navbar\n      /* istnbul ignore next: can't test popper in JSDOM */\n      if (!this.inNavbar) {\n        if (typeof Popper === 'undefined') {\n          warn('b-dropdown: Popper.js not found. Falling back to CSS positioning.');\n        } else {\n          // for dropup with alignment we use the parent element as popper container\n          var element = this.dropup && this.right || this.split ? this.$el : this.$refs.toggle;\n          // Make sure we have a reference to an element, not a component!\n          element = element.$el || element;\n          // Instantiate popper.js\n          this.createPopper(element);\n        }\n      }\n\n      this.setTouchStart(true);\n      this.$emit('shown');\n\n      // Focus on the first item on show\n      this.$nextTick(this.focusFirstItem);\n    },\n    hideMenu: function hideMenu() {\n      this.setTouchStart(false);\n      this.emitOnRoot('bv::dropdown::hidden', this);\n      this.$emit('hidden');\n      this.removePopper();\n    },\n    createPopper: function createPopper(element) {\n      this.removePopper();\n      this._popper = new Popper(element, this.$refs.menu, this.getPopperConfig());\n    },\n    removePopper: function removePopper() {\n      if (this._popper) {\n        // Ensure popper event listeners are removed cleanly\n        this._popper.destroy();\n      }\n      this._popper = null;\n    },\n    getPopperConfig /* istanbul ignore next: can't test popper in JSDOM */: function getPopperConfig() {\n      var placement = AttachmentMap.BOTTOM;\n      if (this.dropup && this.right) {\n        // dropup + right\n        placement = AttachmentMap.TOPEND;\n      } else if (this.dropup) {\n        // dropup + left\n        placement = AttachmentMap.TOP;\n      } else if (this.right) {\n        // dropdown + right\n        placement = AttachmentMap.BOTTOMEND;\n      }\n      var popperConfig = {\n        placement: placement,\n        modifiers: {\n          offset: {\n            offset: this.offset || 0\n          },\n          flip: {\n            enabled: !this.noFlip\n          }\n        }\n      };\n      if (this.boundary) {\n        popperConfig.modifiers.preventOverflow = {\n          boundariesElement: this.boundary\n        };\n      }\n      return assign(popperConfig, this.popperOpts || {});\n    },\n    setTouchStart: function setTouchStart(on) {\n      var _this = this;\n\n      /*\n       * If this is a touch-enabled device we add extra\n       * empty mouseover listeners to the body's immediate children;\n       * only needed because of broken event delegation on iOS\n       * https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n       */\n      if ('ontouchstart' in document.documentElement) {\n        var children = arrayFrom(document.body.children);\n        children.forEach(function (el) {\n          if (on) {\n            eventOn('mouseover', _this._noop);\n          } else {\n            eventOff('mouseover', _this._noop);\n          }\n        });\n      }\n    },\n\n    /* istanbul ignore next: not easy to test */\n    _noop: function _noop() {\n      // Do nothing event handler (used in touchstart event handler)\n    },\n    rootCloseListener: function rootCloseListener(vm) {\n      if (vm !== this) {\n        this.visible = false;\n      }\n    },\n    clickOutListener: function clickOutListener() {\n      this.visible = false;\n    },\n    show: function show() {\n      // Public method to show dropdown\n      if (this.disabled) {\n        return;\n      }\n      this.visible = true;\n    },\n    hide: function hide() {\n      // Public method to hide dropdown\n      if (this.disabled) {\n        return;\n      }\n      this.visible = false;\n    },\n    toggle: function toggle(evt) {\n      // Called only by a button that toggles the menu\n      evt = evt || {};\n      var type = evt.type;\n      var key = evt.keyCode;\n      if (type !== 'click' && !(type === 'keydown' && (key === KeyCodes.ENTER || key === KeyCodes.SPACE || key === KeyCodes.DOWN))) {\n        // We only toggle on Click, Enter, Space, and Arrow Down\n        return;\n      }\n      if (this.disabled) {\n        this.visible = false;\n        return;\n      }\n      this.$emit('toggle', evt);\n      if (evt.defaultPrevented) {\n        // Exit if canceled\n        return;\n      }\n      evt.preventDefault();\n      evt.stopPropagation();\n      // Toggle visibility\n      this.visible = !this.visible;\n    },\n    click: function click(evt) {\n      // Calle only in split button mode, for the split button\n      if (this.disabled) {\n        this.visible = false;\n        return;\n      }\n      this.$emit('click', evt);\n    },\n\n    /* istanbul ignore next: not easy to test */\n    onKeydown: function onKeydown(evt) {\n      // Called from dropdown menu context\n      var key = evt.keyCode;\n      if (key === KeyCodes.ESC) {\n        // Close on ESC\n        this.onEsc(evt);\n      } else if (key === KeyCodes.TAB) {\n        // Close on tab out\n        this.onTab(evt);\n      } else if (key === KeyCodes.DOWN) {\n        // Down Arrow\n        this.focusNext(evt, false);\n      } else if (key === KeyCodes.UP) {\n        // Up Arrow\n        this.focusNext(evt, true);\n      }\n    },\n\n    /* istanbul ignore next: not easy to test */\n    onEsc: function onEsc(evt) {\n      if (this.visible) {\n        this.visible = false;\n        evt.preventDefault();\n        evt.stopPropagation();\n        // Return focus to original trigger button\n        this.$nextTick(this.focusToggler);\n      }\n    },\n\n    /* istanbul ignore next: not easy to test */\n    onTab: function onTab(evt) {\n      if (this.visible) {\n        // TODO: Need special handler for dealing with form inputs\n        // Tab, if in a text-like input, we should just focus next item in the dropdown\n        // Note: Inputs are in a special .dropdown-form container\n        this.visible = false;\n      }\n    },\n    onFocusOut: function onFocusOut(evt) {\n      if (this.$refs.menu.contains(evt.relatedTarget)) {\n        return;\n      }\n      this.visible = false;\n    },\n\n    /* istanbul ignore next: not easy to test */\n    onMouseOver: function onMouseOver(evt) {\n      // Focus the item on hover\n      // TODO: Special handling for inputs? Inputs are in a special .dropdown-form container\n      var item = evt.target;\n      if (item.classList.contains('dropdown-item') && !item.disabled && !item.classList.contains('disabled') && item.focus) {\n        item.focus();\n      }\n    },\n    focusNext: function focusNext(evt, up) {\n      var _this2 = this;\n\n      if (!this.visible) {\n        return;\n      }\n      evt.preventDefault();\n      evt.stopPropagation();\n      this.$nextTick(function () {\n        var items = _this2.getItems();\n        if (items.length < 1) {\n          return;\n        }\n        var index = items.indexOf(evt.target);\n        if (up && index > 0) {\n          index--;\n        } else if (!up && index < items.length - 1) {\n          index++;\n        }\n        if (index < 0) {\n          index = 0;\n        }\n        _this2.focusItem(index, items);\n      });\n    },\n    focusItem: function focusItem(idx, items) {\n      var el = items.find(function (el, i) {\n        return i === idx;\n      });\n      if (el && getAttr(el, 'tabindex') !== '-1') {\n        el.focus();\n      }\n    },\n    getItems: function getItems() {\n      // Get all items\n      return filterVisible(selectAll(ITEM_SELECTOR, this.$refs.menu));\n    },\n    getFirstItem: function getFirstItem() {\n      // Get the first non-disabled item\n      var item = this.getItems()[0];\n      return item || null;\n    },\n    focusFirstItem: function focusFirstItem() {\n      var item = this.getFirstItem();\n      if (item) {\n        this.focusItem(0, [item]);\n      }\n    },\n    focusToggler: function focusToggler() {\n      var toggler = this.toggler;\n      if (toggler && toggler.focus) {\n        toggler.focus();\n      }\n    }\n  }\n};","import idMixin from '../../mixins/id';\nimport dropdownMixin from '../../mixins/dropdown';\n\nexport default {\n  mixins: [idMixin, dropdownMixin],\n  render: function render(h) {\n    var button = h('a', {\n      class: this.toggleClasses,\n      ref: 'toggle',\n      attrs: {\n        href: '#',\n        id: this.safeId('_BV_button_'),\n        disabled: this.disabled,\n        'aria-haspopup': 'true',\n        'aria-expanded': this.visible ? 'true' : 'false'\n      },\n      on: {\n        click: this.toggle,\n        keydown: this.toggle // space, enter, down\n      }\n    }, [this.$slots['button-content'] || this.$slots.text || h('span', { domProps: { innerHTML: this.text } })]);\n    var menu = h('div', {\n      class: this.menuClasses,\n      ref: 'menu',\n      attrs: { 'aria-labelledby': this.safeId('_BV_button_') },\n      on: {\n        mouseover: this.onMouseOver,\n        keydown: this.onKeydown // tab, up, down, esc\n      }\n    }, [this.$slots.default]);\n    return h('li', { attrs: { id: this.safeId() }, class: this.dropdownClasses }, [button, menu]);\n  },\n\n  computed: {\n    isNav: function isNav() {\n      // Signal to dropdown mixin that we are in a navbar\n      return true;\n    },\n    dropdownClasses: function dropdownClasses() {\n      return ['nav-item', 'b-nav-dropdown', 'dropdown', this.dropup ? 'dropup' : '', this.visible ? 'show' : ''];\n    },\n    toggleClasses: function toggleClasses() {\n      return ['nav-link', this.noCaret ? '' : 'dropdown-toggle', this.disabled ? 'disabled' : '', this.extraToggleClasses ? this.extraToggleClasses : ''];\n    },\n    menuClasses: function menuClasses() {\n      return ['dropdown-menu', this.right ? 'dropdown-menu-right' : 'dropdown-menu-left', this.visible ? 'show' : '', this.extraMenuClasses ? this.extraMenuClasses : ''];\n    }\n  },\n  props: {\n    noCaret: {\n      type: Boolean,\n      default: false\n    },\n    extraToggleClasses: {\n      // Extra Toggle classes\n      type: String,\n      default: ''\n    },\n    extraMenuClasses: {\n      // Extra Menu classes\n      type: String,\n      default: ''\n    },\n    role: {\n      type: String,\n      default: 'menu'\n    }\n  }\n};","// Production steps of ECMA-262, Edition 6, 22.1.2.1\n// es6-ified by @alexsasharegan\nif (!Array.from) {\n  Array.from = function () {\n    var toStr = Object.prototype.toString;\n    var isCallable = function isCallable(fn) {\n      return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n    };\n    var toInteger = function toInteger(value) {\n      var number = Number(value);\n      if (isNaN(number)) {\n        return 0;\n      }\n      if (number === 0 || !isFinite(number)) {\n        return number;\n      }\n      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n    };\n    var maxSafeInteger = Math.pow(2, 53) - 1;\n    var toLength = function toLength(value) {\n      return Math.min(Math.max(toInteger(value), 0), maxSafeInteger);\n    };\n\n    // The length property of the from method is 1.\n    return function from(arrayLike /*, mapFn, thisArg */) {\n      // 1. Let C be the this value.\n      var C = this;\n\n      // 2. Let items be ToObject(arrayLike).\n      var items = Object(arrayLike);\n\n      // 3. ReturnIfAbrupt(items).\n      if (arrayLike == null) {\n        throw new TypeError('Array.from requires an array-like object - not null or undefined');\n      }\n\n      // 4. If mapfn is undefined, then let mapping be false.\n      var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n      var T = void 0;\n\n      if (typeof mapFn !== 'undefined') {\n        // 5. else\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n        if (!isCallable(mapFn)) {\n          throw new TypeError('Array.from: when provided, the second argument must be a function');\n        }\n\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 2) {\n          T = arguments[2];\n        }\n      }\n\n      // 10. Let lenValue be Get(items, \"length\").\n      // 11. Let len be ToLength(lenValue).\n      var len = toLength(items.length);\n\n      // 13. If IsConstructor(C) is true, then\n      // 13. a. Let A be the result of calling the [[Construct]] internal method\n      // of C with an argument list containing the single item len.\n      // 14. a. Else, Let A be ArrayCreate(len).\n      var A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\n      // 16. Let k be 0.\n      var k = 0;\n      // 17. Repeat, while k < len… (also steps a - h)\n      var kValue = void 0;\n      while (k < len) {\n        kValue = items[k];\n        if (mapFn) {\n          A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n        } else {\n          A[k] = kValue;\n        }\n        k += 1;\n      }\n      // 18. Let putStatus be Put(A, \"length\", len, true).\n      A.length = len;\n      // 20. Return A.\n      return A;\n    };\n  }();\n}\n\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n// Needed for IE support\nif (!Array.prototype.find) {\n  // eslint-disable-next-line no-extend-native\n  Object.defineProperty(Array.prototype, 'find', {\n    value: function value(predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n\n      var o = Object(this);\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function');\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1];\n\n      // 5. Let k be 0.\n      var k = 0;\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k];\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue;\n        }\n        // e. Increase k by 1.\n        k++;\n      }\n\n      // 7. Return undefined.\n      return undefined;\n    }\n  });\n}\n\nif (!Array.isArray) {\n  Array.isArray = function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n  };\n}\n\n// Static\nexport var from = Array.from;\nexport var isArray = Array.isArray;\n\n// Instance\nexport var arrayIncludes = function arrayIncludes(array, value) {\n  return array.indexOf(value) !== -1;\n};\nexport var arrayFind = function arrayFind(array, fn, thisArg) {\n  return array.find(fn, thisArg);\n};\nexport function concat() {\n  return Array.prototype.concat.apply([], arguments);\n}","function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nimport { isArray } from '../utils/array';\n/**\n * Issue #569: collapse::toggle::state triggered too many times\n * @link https://github.com/bootstrap-vue/bootstrap-vue/issues/569\n */\n\nvar BVRL = '__BV_root_listeners__';\n\nexport default {\n  methods: {\n    /**\n         * Safely register event listeners on the root Vue node.\n         * While Vue automatically removes listeners for individual components,\n         * when a component registers a listener on root and is destroyed,\n         * this orphans a callback because the node is gone,\n         * but the root does not clear the callback.\n         *\n         * This adds a non-reactive prop to a vm on the fly\n         * in order to avoid object observation and its performance costs\n         * to something that needs no reactivity.\n         * It should be highly unlikely there are any naming collisions.\n         * @param {string} event\n         * @param {function} callback\n         * @chainable\n         */\n    listenOnRoot: function listenOnRoot(event, callback) {\n      if (!this[BVRL] || !isArray(this[BVRL])) {\n        this[BVRL] = [];\n      }\n      this[BVRL].push({ event: event, callback: callback });\n      this.$root.$on(event, callback);\n      return this;\n    },\n\n\n    /**\n         * Convenience method for calling vm.$emit on vm.$root.\n         * @param {string} event\n         * @param {*} args\n         * @chainable\n         */\n    emitOnRoot: function emitOnRoot(event) {\n      var _$root;\n\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      (_$root = this.$root).$emit.apply(_$root, [event].concat(_toConsumableArray(args)));\n      return this;\n    }\n  },\n\n  beforeDestroy: function beforeDestroy() {\n    if (this[BVRL] && isArray(this[BVRL])) {\n      while (this[BVRL].length > 0) {\n        // shift to process in order\n        var _BVRL$shift = this[BVRL].shift(),\n            event = _BVRL$shift.event,\n            callback = _BVRL$shift.callback;\n\n        this.$root.$off(event, callback);\n      }\n    }\n  }\n};","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.14.4\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var css = getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var styles = getComputedStyle(element);\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  // Avoid blurry text by using full pixel integers.\n  // For pixel-perfect positioning, top/bottom prefers rounded\n  // values, while left/right prefers floored values.\n  var offsets = {\n    left: Math.floor(popper.left),\n    top: Math.round(popper.top),\n    bottom: Math.round(popper.bottom),\n    right: Math.floor(popper.right)\n  };\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n//# sourceMappingURL=popper.js.map\n"],"sourceRoot":""}